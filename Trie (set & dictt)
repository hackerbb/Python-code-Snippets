class Trie:
    def __init__(self, words=[]):
        self.trie = {}
        for w in words: self.insert(w)

    def insert(self, word):
        t = self.trie
        for w in word:
            if w not in t:
                t[w] = {}
            t = t[w]
        t['#'] = '#'

    def search(self, word):
        t = self.trie
        for w in word:
            if w not in t:
                return False
            t = t[w]
        if '#' in t:
            return True
        return False

    def starts(self, prefix):
        t = self.trie
        for w in prefix:
            if w not in t:
                return False
            t = t[w]
        return True
    
    def remove(self, word):
        t = self.trie
        nodes = []
        for w in word:
            if w not in t:
                return False
            t = t[w]
            nodes.append((t,w))

        if '#' in t:
            p = '#'
            for n,w in nodes[::-1]:
                if len(n[p]) == 0 or p == '#' : del n[p]
                p = w                
